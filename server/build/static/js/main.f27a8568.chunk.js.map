{"version":3,"sources":["redux/MessageReducer.js","redux/ActionTypes.js","redux/userReducer.js","redux/authReducer.js","redux/signupReducer.js","components/LoginComponent.js","components/SignUpComponent.js","components/ChatComponent.js","components/HeaderComponent.js","redux/ActionCreaters.js","components/MainComponent.js","App.js","redux/ConfigureStore.js","index.js"],"names":["Messages","state","isLoading","errMess","messages","selecteduser","action","type","payload","filter","message","_id","length","concat","Users","users","Auth","isAuthenticated","localStorage","getItem","token","user","JSON","parse","creds","error","SignUp","success","LoginComponent","login","useState","username","setUsername","password","setPassword","useEffect","to","className","Row","Col","sm","md","size","offset","Card","style","marginTop","backgroundColor","CardBody","CardTitle","Form","onSubmit","event","preventDefault","Input","placeholder","onChange","target","value","name","SignUpComponent","signup","RenderMessages","userid","err","mess","thread","participant1","participant2","map","sender","key","Fragment","RenderUsers","connectedUsers","setSelected","Button","id","onClick","ListGroup","ChatComponent","props","setNewMessage","setState","newMessage","sendMessage","socket","emit","receiver","filterUsers","li","a","i","document","getElementById","toUpperCase","getElementsByTagName","textContent","innerText","indexOf","display","auth","io","this","on","addNewMessage","window","scrollTo","querySelector","scrollHeight","xs","onKeyUp","Component","Header","logout","src","alt","height","width","errorLoadingMessage","errorLoadingUsers","signupFailed","Main","fetchConnectedUsers","fetchMessages","prevProps","path","exact","component","signupSuccess","withRouter","connect","dispatch","bearer","axios","method","url","headers","then","response","data","catch","loginRequest","setItem","stringify","signupRequested","removeItem","selected","selectUser","addMess","addMessage","store","createStore","combineReducers","applyMiddleware","thunk","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.f27a8568.chunk.js","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Messages = (\r\n    state = {\r\n        isLoading : true,\r\n        errMess : null,\r\n        messages : null,\r\n        selecteduser: null,\r\n    },action\r\n    ) => {\r\n        switch(action.type){\r\n            case ActionTypes.LOADING_MESSAGES: \r\n                return { ...state,isLoading:true,errMess:null,messages:null,selecteduser:null};\r\n            \r\n            case ActionTypes.MESSAGES_FAILED : \r\n                return { ...state,isLoading:false,errMess:action.payload,messages:null,selecteduser:null};\r\n            \r\n            case ActionTypes.ADD_MESSAGES : \r\n                return { ...state,isLoading:false,errMess:null,messages:action.payload,selecteduser:null};\r\n            \r\n            case ActionTypes.ADD_MESSAGE : \r\n                return {state,isLoading:false,errMess:null,messages:(state.messages.filter(message => (message._id === action.payload._id)).length === 0 ? state.messages.concat(action.payload) : state.messages),selecteduser:state.selecteduser}\r\n            \r\n            case ActionTypes.SELECTED : \r\n                return{...state,selecteduser:action.payload};\r\n            \r\n            default : return state;\r\n        }\r\n    }\r\n","export const ADD_MESSAGES = 'ADD_MESSAGES';\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\nexport const LOADING_MESSAGES = 'LOADING_MESSAGES';\r\nexport const MESSAGES_FAILED = 'MESSAGES_FAILED';\r\nexport const ADD_USERS = 'ADD_USERS';\r\nexport const LOADING_USERS = 'LOADING_USERS';\r\nexport const USERS_FAILED  = 'USERS_FAILED';\r\n\r\nexport const SELECTED = 'SELECTED';\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\r\n\r\nexport const SIGNUP_REQUESTED = 'SIGNUP_REQUESTED';\r\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Users = (\r\n    state = {\r\n        isLoading : true,\r\n        errMess : null,\r\n        users : null\r\n    },action\r\n    ) => {\r\n        switch(action.type){\r\n            \r\n            case ActionTypes.LOADING_USERS : return { ...state,isLoading:true,errMess:null,users:null};\r\n            case ActionTypes.USERS_FAILED : return { ...state,isLoading:false,errMess:action.payload,users:null};\r\n            case ActionTypes.ADD_USERS : return { ...state,isLoading:false,errMess:null,users:action.payload};\r\n            default : return state;\r\n        }\r\n    }\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Auth = (\r\n    state = {isLoading: false,\r\n    isAuthenticated: localStorage.getItem('token') ? true : false,\r\n    token: localStorage.getItem('token'),\r\n    user: localStorage.getItem('userdetails') ? JSON.parse(localStorage.getItem('userdetails')) : null,\r\n    errMess: null\r\n    },\r\n    action) => {\r\n        switch(action.type){\r\n            case ActionTypes.LOGIN_REQUEST: \r\n                return {...state,isLoading: true,isAuthenticated: false,user: action.creds};\r\n            case ActionTypes.LOGIN_SUCCESS: \r\n                return {...state,isLoading: false,isAuthenticated: true,errMess: '',token: action.token,user:action.user};\r\n            case ActionTypes.LOGIN_FAILURE:\r\n                return {...state,isLoading: false,isAuthenticated: false,errMess: action.error};\r\n            case ActionTypes.LOGOUT_REQUEST:\r\n                return {...state,isLoading: true,isAuthenticated: true};\r\n            case ActionTypes.LOGOUT_SUCCESS:\r\n                return {...state,isLoading: false,isAuthenticated: false,token: '',user: null};\r\n            default: return state\r\n        }\r\n\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const SignUp = (state ={\r\n    isLoading : false,\r\n    errMess : null,\r\n    user : null,\r\n    success : false\r\n},action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.SIGNUP_REQUESTED :\r\n            return {...state, isLoading : true,errMess:null,user:null,success:false};\r\n\r\n        case ActionTypes.SIGNUP_SUCCESS :\r\n            return {...state, isLoading : false, errMess : null, user : action.payload,success:true};\r\n\r\n        case ActionTypes.SIGNUP_FAILED : \r\n            return { ...state,isLoading : false, errMess: action.payload , user : null,success:false};\r\n        \r\n        default : return state;\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody,CardTitle,Form,Input,Row,Col} from 'reactstrap';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nfunction LoginComponent({login,isAuthenticated}) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(()=>{\r\n\r\n    },[isAuthenticated]);\r\n\r\n    const handleLoginSubmit = (event) =>{\r\n      event.preventDefault();\r\n      if(username && password)\r\n      {\r\n          login({username:username,password:password})\r\n      }\r\n    }\r\n    if(isAuthenticated === true)\r\n    {\r\n      return(\r\n        <Redirect to='/chat' username={username}/>\r\n      )\r\n    }\r\n    else\r\n    return (\r\n      <div className='container' >\r\n        <Row>\r\n          <Col sm=\"12\" md={{size:4,offset:4}}>\r\n            <Card style={{marginTop:200,backgroundColor:' #ccffff'}} >\r\n              <CardBody>\r\n                <CardTitle><h3>Chat.Io</h3></CardTitle>\r\n                <Form onSubmit={handleLoginSubmit} >\r\n                  <div className=\"form-group\">\r\n                    <Input type='text' placeholder='username' onChange={(event) => { setUsername(event.target.value)}}/>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <Input type='password' placeholder='password' onChange={(event) => { setPassword(event.target.value)}} />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <Input type='submit' className='btn btn-primary btn-block' value='Log In' name='submit'/>\r\n                  </div>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          \r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n export default LoginComponent;","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody,CardTitle,Form,Input,Row,Col} from 'reactstrap';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nfunction SignUpComponent({ signup , isAuthenticated ,success}) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n    },[success]);\r\n\r\n    const handleSignupSubmit = (event) =>{\r\n      event.preventDefault();\r\n      if(username && password)\r\n      {\r\n        signup({username:username,password:password})\r\n      }\r\n    }\r\n    if(isAuthenticated === true){\r\n      return (<Redirect to='/chat' />)\r\n    }\r\n    if(success === true){\r\n      return(<Redirect to='/login' />);\r\n    }else\r\n    return (\r\n      <div className='container'>\r\n        <Row>\r\n          <Col sm=\"12\" md={{size:4,offset:4}}>\r\n            <Card style={{marginTop:200,backgroundColor:' #ccffff'}}>\r\n              <CardBody>\r\n                <CardTitle><h3>Chat.Io</h3></CardTitle>\r\n                <Form onSubmit={handleSignupSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <Input type='text' placeholder='username' onChange={(event) => setUsername(event.target.value)}/>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <Input type='password' placeholder='password' onChange={(event) => setPassword(event.target.value)}/>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <Input type='submit' className='btn btn-primary btn-block' value='Sign Up' name='submit'/>\r\n                  </div>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          \r\n        </Row>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n\r\n export default SignUpComponent;","import React, { Component } from 'react';\r\nimport { Card, CardBody, Row, Col, ListGroup, Input, Form, Button } from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom'\r\nimport io from 'socket.io-client';\r\nconst ENDPOINT='localhost:8000';\r\n\r\nconst RenderMessages = ({userid,messages}) => {\r\n    if(messages.isLoading === true){\r\n        return(<div></div>)\r\n    }else if(messages.errMess){\r\n        return(<div>{messages.err}</div>)\r\n    }else{\r\n        messages = messages.messages.filter(message => (message.thread.participant1 === messages.selecteduser || message.thread.participant2 === messages.selecteduser))\r\n        const mess = messages.map(message => { \r\n        if(message.sender === userid)\r\n        return(<button key={message._id} className=\"messagebutton btn btn-block \" ><span className='sender'>{message.message}</span></button>)\r\n        else\r\n        return (<button key={message._id} className='messagebutton btn btn-block'><span className='receiver'>{message.message}</span></button>)\r\n        })\r\n\r\n        if(!userid)\r\n        {     \r\n            return(<React.Fragment></React.Fragment>);\r\n        }\r\n        else{\r\n            return(<div className='innermessagebox'>{mess}</div>);\r\n        }\r\n    }\r\n}\r\n\r\nconst RenderUsers = ({ connectedUsers, setSelected }) => {\r\n    if(connectedUsers.isLoading === true){\r\n        return(<div></div>)\r\n    }else if(connectedUsers.errMess){\r\n        return(<div>{connectedUsers.err}</div>)\r\n    }else{\r\n        const users = connectedUsers.users.map((user) => {\r\n            return(\r\n                <Button className=\"userbutton btn btn-light mb-1 \" key={user._id} id={user._id} onClick={() => {setSelected(user._id)}}>\r\n                    {user.username}\r\n                </Button>\r\n                )            \r\n        })\r\n\r\n        return(\r\n            <ListGroup className=\"list-group\"  id='allusers'>\r\n                {users}\r\n            </ListGroup>\r\n        )\r\n    }\r\n}\r\nclass ChatComponent extends Component {\r\n   \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user:this.props.auth.user,\r\n            token:this.props.auth.token,\r\n            newMessage:'',\r\n            socket:io(ENDPOINT),\r\n        };\r\n    }\r\n    \r\n    setNewMessage = (message) => {\r\n        this.setState({newMessage:message});\r\n    }\r\n    \r\n    \r\n    sendMessage = (event) => {\r\n        event.preventDefault();\r\n        this.state.socket.emit('send message',{sender:this.state.user,receiver:this.props.connectedUsers.users.filter(user => (user._id === this.props.messages.selecteduser))[0],newMessage:this.state.newMessage});\r\n\r\n\r\n    }\r\n\r\n    filterUsers = () => {\r\n        let input, filter, ul, li, a, i, txtValue;\r\n        input = document.getElementById(\"searchkey\");\r\n        filter = input.value.toUpperCase();\r\n        ul = document.getElementById(\"allusers\");\r\n        li = ul.getElementsByTagName(\"button\");\r\n        for (i = 0; i < li.length; i++) {\r\n            a = li[i];\r\n            txtValue = a.textContent || a.innerText;\r\n            if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n                li[i].style.display = \"\";\r\n            } else {\r\n                li[i].style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        if(this.props.auth.isAuthenticated === true && this.props.auth.isLoading === false){\r\n            this.state.socket.emit('connection',this.state.user.username);\r\n            this.state.socket.emit('get connected',this.state.user);\r\n            this.state.socket.on('new message',(message) => { \r\n                this.props.addNewMessage(message)\r\n            });\r\n            window.scrollTo(0,document.querySelector(\".messagebox\").scrollHeight);\r\n        } \r\n    }\r\n\r\n    render(){\r\n        if(this.props.auth.isLoading === true){\r\n            return(<div></div>)\r\n        }\r\n        else if(this.props.auth.isAuthenticated === false){\r\n            return(<Redirect to='/'/>)\r\n        }\r\n        return(\r\n            <div className='container mt-1' >\r\n                <Row className='bgcolor'>\r\n                    <Col  xs={{size:4}} md={{size:4}} style={{'paddingLeft':'0px','paddingRight':'0px'}}>\r\n                        <Card className='bgcolor '>\r\n                            <CardBody >\r\n                                <div className='currentuser'>\r\n                                    <Button className=\"btn btn-light btn-block mb-2\" style={{'backgroundColor':'#00cccc'}}><h5 ><span className='fa fa-user-circle-o fa-2x icon'></span>{this.state.user.username}</h5></Button>\r\n                                </div>\r\n                                <Form>\r\n                                    <Input type='text' placeholder='search' name='searchbox' className='searchbox' id='searchkey' onKeyUp={this.filterUsers}/> \r\n                                </Form>\r\n                                <div>     \r\n                                    <RenderUsers connectedUsers={this.props.connectedUsers} setSelected={this.props.setSelected}/>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n    \r\n                    <Col xs={{size:8}} md={{size:8}} style={{'paddingLeft':'0px','paddingRight':'0px'}}>\r\n                        <Card className='bgcolor'>\r\n                            <CardBody>\r\n                                <Row>\r\n                                    <Col md={{size:12}}>\r\n                                        <div >\r\n                                            {this.props.messages.selecteduser ?\r\n                                            <Button className=\"selecteduser btn btn-light btn-block mb-2\" style={{'backgroundColor':'#00cccc'}}><h5>{this.props.connectedUsers.users.filter(user => (user._id === this.props.messages.selecteduser))[0].username}</h5></Button>\r\n                                            :<React.Fragment></React.Fragment>}\r\n                                        </div>\r\n                                        <div  key=\"messages\" className=\"messagebox\" style={{'display':'block','textAlign':'left'}} >\r\n                                            <RenderMessages userid={this.state.user._id} messages={this.props.messages}/>\r\n                                        </div>\r\n                                    </Col>\r\n                                    \r\n                                </Row>\r\n\r\n                                {this.props.messages.selecteduser ?\r\n                                    <Form onSubmit={this.sendMessage} className='mt-2'>\r\n                                        <Row>\r\n                                            <Col md={{size:10}}>\r\n                                                <textarea type=\"text\" className='form-control' onChange={event => {this.setNewMessage(event.target.value)}}/>   \r\n                                            </Col>\r\n                                            <Col md={{size:2}}>\r\n                                                <Input type='submit' className='btn btn-primary' value='send'/>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                    : <React.Fragment></React.Fragment>\r\n                                }\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default ChatComponent;","import React from 'react';\r\nimport { Button, Col } from 'reactstrap';\r\n\r\nconst Header = ({ auth, logout}) => {\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <div className=\"row\" style={{'backgroundColor':'#00b3b3','padding':'15px'}}>  \r\n                <Col xs={{size:4}} md={{size:2}} style={{'paddingRight':'0px'}}>\r\n                    <img src={'logo1.png'}  alt='logo' height={50} width={100} />\r\n                </Col>\r\n                <Col xs={{size:5}} md={{size:8}} style={{'paddingLeft':'0px'}}>\r\n                    <h3 style={{'textAlign':'left'}}>ChatIo</h3>\r\n                </Col>\r\n                <Col xs={{size:3}} md={{size:2}}>\r\n                    <div style={{'paddingTop':'6px'}}>\r\n                        {auth.isAuthenticated ? <Button className='ml-auto' onClick={logout}><span className=\"fa fa-sign-out\"></span>Logout</Button> : null}\r\n                    </div> \r\n                </Col>\r\n                \r\n                  \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import * as ActionTypes from './ActionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const messagesLoading = () => ({\r\n    type : ActionTypes.LOADING_MESSAGES\r\n})\r\n\r\nexport const addMessages = (messages) => ({\r\n    type : ActionTypes.ADD_MESSAGES,\r\n    payload : messages\r\n})\r\n\r\nexport const errorLoadingMessage = (error) => ({\r\n    type : ActionTypes.MESSAGES_FAILED,\r\n    payload : error.message\r\n})\r\n\r\nexport const fetchMessages = (token) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer '+ token\r\n    dispatch(messagesLoading());\r\n    axios({\r\n        method:'get',\r\n        url:'http://localhost:8000/chatting/getmessages',\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n            'Authorization':bearer\r\n        }\r\n    }).then(response => {\r\n        dispatch(addMessages(response.data.messages));\r\n    })\r\n    .catch(error => dispatch(errorLoadingMessage(error)));\r\n}\r\n\r\n\r\nexport const usersLoading = () => ({\r\n    type : ActionTypes.LOADING_USERS\r\n})\r\n\r\nexport const addUsers = (users) => ({\r\n    type : ActionTypes.ADD_USERS,\r\n    payload : users\r\n})\r\n\r\nexport const errorLoadingUsers = (error) => ({\r\n    type : ActionTypes.USERS_FAILED,\r\n    payload : error.message\r\n})\r\n\r\n\r\nexport const fetchConnectedUsers = (token) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + token;\r\n    dispatch(usersLoading());\r\n\r\n    axios({\r\n        method:'get',\r\n        url:'http://localhost:8000/chatting/getconnectedusers',\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n            'Authorization': bearer\r\n        }\r\n    }).then(response => {\r\n        dispatch(addUsers(response.data.users));\r\n    })\r\n    .catch(error => dispatch(errorLoadingUsers(error)));\r\n}\r\n\r\nexport const loginRequest = (creds) => ({\r\n    type : ActionTypes.LOGIN_REQUEST,\r\n    creds : creds\r\n})\r\n\r\nexport const loginSuccess = (token,user) => ({\r\n    type : ActionTypes.LOGIN_SUCCESS,\r\n    token : token,\r\n    user : user\r\n\r\n})\r\n\r\nexport const loginFailed = (error) => ({\r\n    type : ActionTypes.LOGIN_FAILURE,\r\n    error:error.message\r\n})\r\n\r\n\r\nexport const login = (creds) => (dispatch) => {\r\n    dispatch(loginRequest(creds));\r\n    \r\n    axios({\r\n        method:'post',\r\n        url:'http://localhost:8000/user/login',\r\n        headers : {\r\n          'Content-Type':'application/json'\r\n        },\r\n        data:{\r\n          username:creds.username,\r\n          password:creds.password\r\n        }\r\n        })\r\n        .then(response => {\r\n        //   console.log(response.data.token);\r\n          localStorage.setItem('userdetails',JSON.stringify(response.data.user));\r\n          localStorage.setItem('token',response.data.token);\r\n          dispatch(loginSuccess(response.data.token,response.data.user));\r\n        })\r\n        .catch(err => {dispatch(loginFailed(err))})\r\n}\r\n\r\nexport const logoutRequest = () => ({\r\n    type : ActionTypes.LOGOUT_REQUEST,\r\n})\r\n\r\nexport const logoutSuccess = () => ({\r\n    type:ActionTypes.LOGOUT_SUCCESS,\r\n})\r\n\r\nexport const logoutFailed = (error) => ({\r\n    type : ActionTypes.LOGOUT_FAILURE,\r\n    error:error.message\r\n})\r\n\r\nexport const logout = () => (dispatch) => {\r\n    dispatch(logoutRequest());\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userdetails');\r\n    dispatch(errorLoadingMessage({ message : 'user logged out'}));\r\n    dispatch(errorLoadingUsers({ message : 'user logged out'}));\r\n    dispatch(logoutSuccess());\r\n}\r\n\r\n\r\nexport const signupRequested = (creds) => ({\r\n    type : ActionTypes.SIGNUP_REQUESTED,\r\n    payload : creds\r\n})\r\n\r\nexport const signupFailed = (error) => ({\r\n    type : ActionTypes.SIGNUP_FAILED,\r\n    payload:error\r\n})\r\n\r\nexport const signupSuccess = () => ({\r\n    type:ActionTypes.SIGNUP_SUCCESS\r\n})\r\n\r\n\r\nexport const signup = (creds) => (dispatch) => {\r\n    dispatch(signupRequested(creds));\r\n    axios({\r\n        method:'post',\r\n        url : 'http://localhost:8000/user/signup',\r\n        headers:{\r\n          'Content-Type':'application/json'\r\n        },\r\n        data:{\r\n          username:creds.username,\r\n          password:creds.password\r\n        }\r\n      }).then(response => {\r\n          if(response.data.success === true)\r\n          dispatch(signupSuccess());\r\n          else dispatch(signupFailed('signup failed'));\r\n      })\r\n      .catch(err => {\r\n          dispatch(signupFailed(err));\r\n      })\r\n}\r\n\r\nexport const selected = (userid) => ({\r\n    type : ActionTypes.SELECTED,\r\n    payload : userid\r\n})\r\n\r\nexport const selectUser = (userid) => (dispatch) => {\r\n    dispatch(selected(userid));\r\n}\r\n\r\nexport const addMess = (message) => ({\r\n    type : ActionTypes.ADD_MESSAGE,\r\n    payload : message\r\n})\r\n\r\nexport const addMessage = (message) => (dispatch) => {\r\n    //console.log(message)\r\n    dispatch(addMess(message.message));\r\n}","import React,{ Component } from 'react';\r\nimport LoginComponent from './LoginComponent';\r\nimport SignUpComponent from './SignUpComponent';\r\nimport ChatComponent from './ChatComponent';\r\nimport Header from './HeaderComponent';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport { fetchConnectedUsers, fetchMessages, login, signup, logout, selectUser, addMessage } from '../redux/ActionCreaters';\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchMessages : (token) => dispatch(fetchMessages(token)),\r\n    fetchConnectedUsers : (token) =>  dispatch(fetchConnectedUsers(token)),\r\n    login : (creds) => dispatch(login(creds)),\r\n    signup : (creds) => dispatch(signup(creds)),\r\n    logout : () => dispatch(logout()),\r\n    setSelected : (userid) => dispatch(selectUser(userid)),\r\n    addNewMessage : (message) => dispatch(addMessage(message))\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages : state.messages,\r\n        users : state.users,\r\n        auth : state.auth,\r\n        signupSuccess : state.signup.success\r\n    }\r\n}\r\nclass Main extends Component{\r\n    componentDidMount(){\r\n        if(this.props.auth.isAuthenticated){\r\n            this.props.fetchConnectedUsers(this.props.auth.token);\r\n            this.props.fetchMessages(this.props.auth.token);\r\n        }    \r\n    }\r\n    componentDidUpdate(prevProps){\r\n       if(prevProps.auth.isAuthenticated === false && this.props.auth.isAuthenticated === true){\r\n            this.props.fetchConnectedUsers(this.props.auth.token);\r\n            this.props.fetchMessages(this.props.auth.token);  \r\n       }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header auth={this.props.auth} logout={this.props.logout}/>\r\n                <Switch>\r\n                    <Route path='/' exact component={() => <LoginComponent login={this.props.login} isAuthenticated={this.props.auth.isAuthenticated}/>}/>\r\n                    \r\n                    <Route path='/login' exact component={ () => <LoginComponent login={this.props.login} isAuthenticated={this.props.auth.isAuthenticated}/>}/>\r\n                    \r\n                    <Route path='/signup' exact component={() => <SignUpComponent signup={this.props.signup} isAuthenticated={this.props.auth.isAuthenticated} success={this.props.signupSuccess}/>}/>\r\n                    \r\n                    <Route path='/chat' exact component={() => <ChatComponent connectedUsers={this.props.users} messages={this.props.messages} logout={this.props.logout} setSelected={this.props.setSelected}  addNewMessage={this.props.addNewMessage} auth={this.props.auth} />}/>\r\n                    \r\n                    <Route path='*' component={LoginComponent} />\r\n\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/ConfigureStore';\nimport './App.css';\nimport Main from './components/MainComponent';\n\nconst store  = ConfigureStore();\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main/>\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n// import logger from 'redux-logger';\r\nimport { Messages } from './MessageReducer';\r\nimport { Users } from './userReducer';\r\nimport { Auth } from './authReducer';\r\nimport { SignUp } from './signupReducer';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            messages : Messages,\r\n            users : Users,\r\n            auth : Auth,\r\n            signup : SignUp\r\n        }),applyMiddleware(thunk));\r\n\r\n    return store;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(<App/>,document.querySelector('#root'));\n  \n\n\n"],"sourceRoot":""}